#include<stdio.h>
//#define MAX
char exp_[30]={'(','A','+','(','B','*','C','-','(','D','/','E','^','F',')','*','G',')','*','H',')'};
char stack[10];
char post[30];
int s=-1,p=-1,i=0;
int main()
{
    while(exp_[i]!='\0')
    {
        if(exp_[i]=='+' || exp_[i]=='-' || exp_[i]=='*' || exp_[i]=='/' || exp_[i]=='^' || exp_[i]=='(' || exp_[i]==')' )
        {
            s=s+1;
            stack[s]=exp_[i];
            if(stack[s]==stack[s-1])
            {
                p=p+1;
                post[p]=stack[s];
                s=s-1;
            }
            else if(stack[s]==')')
            {
                s=s-1;
                while(stack[s]!='(')
                {
                    p=p+1;
                    post[p]=stack[s];
                    s=s-1;
                }
                s=s-1;
            }
            for(int j=0;j<5;j++)
            {
                if((stack[s]=='+' && stack[s-1]=='*') || (stack[s]=='+' && stack[s-1]=='/') || (stack[s]=='+' && stack[s-1]=='^'))
                {
                    p=p+1;
                    post[p]=stack[s-1];
                    stack[s-1]=stack[s];
                    s=s-1;
                }
                else if((stack[s]=='-' && stack[s-1]=='*') || (stack[s]=='-' && stack[s-1]=='/') || (stack[s]=='-' && stack[s-1]=='^'))
                {
                    p=p+1;
                    post[p]=stack[s-1];
                    stack[s-1]=stack[s];
                    s=s-1;
                }
                else if((stack[s]=='*' && stack[s-1]=='^') || (stack[s]=='/' && stack[s-1]=='^'))
                {
                    p=p+1;
                    post[p]=stack[s-1];
                    stack[s-1]=stack[s];
                    s=s-1;
                }
            }
        }
        else
        {
            p=p+1;
            post[p]=exp_[i];
        }
        i++;
    }
    printf("%s\n\n",post);
    return 0;
}

